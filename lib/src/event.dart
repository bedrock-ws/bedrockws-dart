import 'package:bedrockws/bedrockws.dart';

/// The type of callbacks called when an event is triggered.
typedef EventHandler<C extends Context> = Future<void> Function(C);

/// Events that Minecraft listens to and is able to send to the server.
enum Event {
  additionalContentLoaded,
  agentCommand,
  agentCreated,
  apiInit,
  appPaused,
  appResumed,
  appSuspended,
  awardAchievement,
  blockBroken,
  blockPlaced,
  boardTextUpdate,
  bossKilled,
  cameraUsed,
  cauldronUsed,
  configurationChanged,
  connectionFailed,
  craftingSessionCompleted,
  endOfDay,
  entitySpawned,
  fileTransmissionCancelled,
  fileTransmissionCompleted,
  fileTransmissionStarted,
  firstTimeClientOpen,
  focusGained,
  focusLost,
  gameSessionComplete,
  gameSessionStart,
  hardwareInfo,
  hasNewContent,
  itemAcquired,
  itemCrafted,
  itemDestroyed,
  itemDropped,
  itemEnchanted,
  itemSmelted,
  itemUsed,
  joinCanceled,
  jukeboxUsed,
  licenseCensus,
  mascotCreated,
  menuShown,
  mobInteracted,
  mobKilled,
  multiplayerConnectionStateChanged,
  multiplayerRoundEnd,
  multiplayerRoundStart,
  npcPropertiesUpdated,
  optionsUpdated,
  performanceMetrics,
  playerBounced,
  playerDied,
  playerJoin,
  playerLeave,
  playerMessage,
  playerTeleported,
  playerTransform,
  playerTravelled,
  portalBuilt,
  portalUsed,
  portfolioExported,
  potionBrewed,
  purchaseAttempt,
  purchaseResolved,
  regionalPopup,
  respondedToAcceptContent,
  screenChanged,
  screenHeartbeat,
  signInToEdu,
  signInToXboxLive,
  signOutOfXboxLive,
  specialMobBuilt,
  startClient,
  startWorld,
  textToSpeechToggled,
  ugcDownloadCompleted,
  ugcDownloadStarted,
  uploadSkin,
  vehicleExited,
  worldExported,
  worldFilesListed,
  worldGenerated,
  worldLoaded,
  worldUnloaded;

  @override
  String toString() {
    return switch (this) {
      Event.additionalContentLoaded => 'AdditionalContentLoaded',
      Event.agentCommand => 'AgentCommand',
      Event.agentCreated => 'AgentCreated',
      Event.apiInit => 'ApiInit',
      Event.appPaused => 'AppPaused',
      Event.appResumed => 'AppResumed',
      Event.appSuspended => 'AppSuspended',
      Event.awardAchievement => 'AwardAchievement',
      Event.blockBroken => 'BlockBroken',
      Event.blockPlaced => 'BlockPlaced',
      Event.boardTextUpdate => 'BoardTextUpdate',
      Event.bossKilled => 'BossKilled',
      Event.cameraUsed => 'CameraUsed',
      Event.cauldronUsed => 'CauldronUsed',
      Event.configurationChanged => 'ConfigurationChanged',
      Event.connectionFailed => 'ConnectionFailed',
      Event.craftingSessionCompleted => 'CraftingSessionCompleted',
      Event.endOfDay => 'EndOfDay',
      Event.entitySpawned => 'EntitySpawned',
      Event.fileTransmissionCancelled => 'FileTransmissionCancelled',
      Event.fileTransmissionCompleted => 'FileTransmissionCompleted',
      Event.fileTransmissionStarted => 'FileTransmissionStarted',
      Event.firstTimeClientOpen => 'FirstTimeClientOpen',
      Event.focusGained => 'FocusGained',
      Event.focusLost => 'FocusLost',
      Event.gameSessionComplete => 'GameSessionComplete',
      Event.gameSessionStart => 'GameSessionStart',
      Event.hardwareInfo => 'HardwareInfo',
      Event.hasNewContent => 'HasNewContent',
      Event.itemAcquired => 'ItemAcquired',
      Event.itemCrafted => 'ItemCrafted',
      Event.itemDestroyed => 'ItemDestroyed',
      Event.itemDropped => 'ItemDropped',
      Event.itemEnchanted => 'ItemEnchanted',
      Event.itemSmelted => 'ItemSmelted',
      Event.itemUsed => 'ItemUsed',
      Event.joinCanceled => 'JoinCanceled',
      Event.jukeboxUsed => 'JukeboxUsed',
      Event.licenseCensus => 'LicenseCensus',
      Event.mascotCreated => 'MascotCreated',
      Event.menuShown => 'MenuShown',
      Event.mobInteracted => 'MobInteracted',
      Event.mobKilled => 'MobKilled',
      Event.multiplayerConnectionStateChanged =>
        'MultiplayerConnectionStateChanged',
      Event.multiplayerRoundEnd => 'MultiplayerRoundEnd',
      Event.multiplayerRoundStart => 'MultiplayerRoundStart',
      Event.npcPropertiesUpdated => 'NpcPropertiesUpdated',
      Event.optionsUpdated => 'OptionsUpdated',
      Event.performanceMetrics => 'PerformanceMetrics',
      Event.playerBounced => 'PlayerBounced',
      Event.playerDied => 'PlayerDied',
      Event.playerJoin => 'PlayerJoin',
      Event.playerLeave => 'PlayerLeave',
      Event.playerMessage => 'PlayerMessage',
      Event.playerTeleported => 'PlayerTeleported',
      Event.playerTransform => 'PlayerTransform',
      Event.playerTravelled => 'PlayerTravelled',
      Event.portalBuilt => 'PortalBuilt',
      Event.portalUsed => 'PortalUsed',
      Event.portfolioExported => 'PortfolioExported',
      Event.potionBrewed => 'PotionBrewed',
      Event.purchaseAttempt => 'PurchaseAttempt',
      Event.purchaseResolved => 'PurchaseResolved',
      Event.regionalPopup => 'RegionalPopup',
      Event.respondedToAcceptContent => 'RespondedToAcceptContent',
      Event.screenChanged => 'ScreenChanged',
      Event.screenHeartbeat => 'ScreenHeartbeat',
      Event.signInToEdu => 'SignInToEdu',
      Event.signInToXboxLive => 'SignInToXboxLive',
      Event.signOutOfXboxLive => 'SignOutOfXboxLive',
      Event.specialMobBuilt => 'SpecialMobBuilt',
      Event.startClient => 'StartClient',
      Event.startWorld => 'StartWorld',
      Event.textToSpeechToggled => 'TextToSpeechToggled',
      Event.ugcDownloadCompleted => 'UgcDownloadCompleted',
      Event.ugcDownloadStarted => 'UgcDownloadStarted',
      Event.uploadSkin => 'UploadSkin',
      Event.vehicleExited => 'VehicleExited',
      Event.worldExported => 'WorldExported',
      Event.worldFilesListed => 'WorldFilesListed',
      Event.worldGenerated => 'WorldGenerated',
      Event.worldLoaded => 'WorldLoaded',
      Event.worldUnloaded => 'WorldUnloaded',
    };
  }
}
